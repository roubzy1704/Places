{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button/Button.js","shared/components/UIElements/LoadingSpinner/LoadingSpinner.js","shared/components/UIElements/BackDrop/BackDrop.js","shared/hooks/auth-hook.js","shared/components/UIElements/Navigation/Footer/Footer.js","shared/components/UIElements/Navigation/MainHeader/MainHeader.js","shared/components/UIElements/Navigation/NavLinks/NavLinks.js","shared/components/UIElements/Navigation/SideDrawer/SideDrawer.js","shared/components/UIElements/Navigation/MainNavigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","Footer","target","rel","style","textDecoration","MainHeader","NavLinks","auth","useContext","Fragment","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","BackDrop","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","position","minHeight","paddingBottom","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.ec501b35.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// create a context object called AuthContext using createContext\r\n// initialize and set the properties including login and logout methods\r\nexport const AuthContext = createContext({\r\n\tisLoggedIn: false,\r\n\tuserId: null,\r\n\ttoken: null,\r\n\tlogin: () => {},\r\n\tlogout: () => {},\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n\tif (props.href) {\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\r\n\t\t\t\t\tprops.inverse && \"button--inverse\"\r\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\r\n\t\t\t\thref={props.href}\r\n\t\t\t>\r\n\t\t\t\t{props.children}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n\tif (props.to) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={props.to}\r\n\t\t\t\texact={props.exact}\r\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\r\n\t\t\t\t\tprops.inverse && \"button--inverse\"\r\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\r\n\t\t\t>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`button button--${props.size || \"default\"} ${\r\n\t\t\t\tprops.inverse && \"button--inverse\"\r\n\t\t\t} ${props.danger && \"button--danger\"}`}\r\n\t\t\ttype={props.type}\r\n\t\t\tonClick={props.onClick}\r\n\t\t\tdisabled={props.disabled}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n\treturn (\r\n\t\t<div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n\t\t\t<div className=\"lds-dual-ring\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./BackDrop.css\";\r\n\r\n//this component renders a div behind the side drawer and is used to deselect the sidedrawer\r\n//this\r\nconst Backdrop = (props) => {\r\n\t//Portal allows you render a component in a different place than the component itself\r\n\t//this backdrop component is render in the backdrop-hook div, which is in the index.html file\r\n\t//above the drawer-hook and root div\r\n\t//look at side drawer component for a similar approach, portal requires some content in a div, and a dom call\r\n\t//to place on where to place that content\r\n\treturn ReactDOM.createPortal(\r\n\t\t<div className=\"backdrop\" onClick={props.onClick}></div>,\r\n\t\tdocument.getElementById(\"backdrop-hook\")\r\n\t);\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n\tconst [token, setToken] = useState(false);\r\n\tconst [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\tconst [userId, setUserId] = useState(false);\r\n\r\n\t//this function is wrapped with usecallback so that it is not created unnecesssary, and avoiding infinite loops\r\n\tconst login = useCallback((uid, token, expirationDate) => {\r\n\t\tsetToken(token);\r\n\t\tsetUserId(uid);\r\n\t\tconst tokenExpirationDate =\r\n\t\t\texpirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\t\tsetTokenExpirationDate(tokenExpirationDate);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"userData\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tuserId: uid,\r\n\t\t\t\ttoken,\r\n\t\t\t\texpiration: tokenExpirationDate.toISOString(),\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\tconst logout = useCallback(() => {\r\n\t\tsetToken(null);\r\n\t\tsetTokenExpirationDate(null);\r\n\t\tsetUserId(null);\r\n\t\tlocalStorage.removeItem(\"userData\");\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token && tokenExpirationDate) {\r\n\t\t\tconst remainingTime =\r\n\t\t\t\ttokenExpirationDate.getTime() - new Date().getTime();\r\n\t\t\tlogoutTimer = setTimeout(logout, remainingTime);\r\n\t\t} else {\r\n\t\t\tclearTimeout(logoutTimer);\r\n\t\t}\r\n\t}, [token, logout, tokenExpirationDate]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\t\tif (\r\n\t\t\tstoredData &&\r\n\t\t\tstoredData.token &&\r\n\t\t\tnew Date(storedData.expiration) > new Date()\r\n\t\t) {\r\n\t\t\tlogin(\r\n\t\t\t\tstoredData.userId,\r\n\t\t\t\tstoredData.token,\r\n\t\t\t\tnew Date(storedData.expiration)\r\n\t\t\t);\r\n\t\t}\r\n\t}, [login]);\r\n\r\n\treturn { userId, login, logout, token };\r\n};\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className=\"Footer\">\r\n\t\t\t<p>\r\n\t\t\t\t2020 <i className=\"fas fa-code\"></i> by{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://www.ugoarubaleze.com\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"myName\">Ugo Arubaleze</span>\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n\treturn <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\nimport Button from \"../../../FormElements/Button/Button\";\r\n\r\nconst NavLinks = (props) => {\r\n\t//using the useContext hook, to utilize AuthContext here in Navlinks\r\n\t//we are going to display difference navlinks depending on user login or not\r\n\t//this component will rerender whenever AuthContext changes\r\n\tconst auth = useContext(AuthContext);\r\n\t//retrieve the\r\n\tconst userId = auth.userId;\r\n\r\n\treturn (\r\n\t\t<ul className=\"nav-links\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" exact>\r\n\t\t\t\t\tALL USERS\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t{/* if user is logged in */}\r\n\t\t\t{auth.isLoggedIn && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to={`/${userId}/places`}>MY PLACES</NavLink>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t\t{/* if user is not logged in show authenticate link */}\r\n\t\t\t{!auth.isLoggedIn && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{auth.isLoggedIn && <Button onClick={auth.logout}>LOGOUT</Button>}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n\tconst content = (\r\n\t\t<CSSTransition\r\n\t\t\tin={props.show}\r\n\t\t\ttimeout={200}\r\n\t\t\tclassNames=\"slide-in-left\"\r\n\t\t\tmountOnEnter\r\n\t\t\tunmountOnExit\r\n\t\t>\r\n\t\t\t<aside className=\"side-drawer\" onClick={props.onClick}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</aside>\r\n\t\t</CSSTransition>\r\n\t);\r\n\t//Portal allows you render a component in a different place than the component itself\r\n\t//this sider drawer is render in the drawer-hook div, which is in the index.html file\r\n\t//above the root div\r\n\t//look at backdrop component for a similar approach, portal requires some content in a div, and a dom call\r\n\t//to place on where to place that content\r\n\treturn ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"../MainHeader/MainHeader\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport SideDrawer from \"../SideDrawer/SideDrawer\";\r\nimport BackDrop from \"../../BackDrop/BackDrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{/* BackDrop is used to provide an overlay to deselect the sidedrawer compoent */}\r\n\t\t\t{drawerIsOpen && <BackDrop onClick={() => setDrawerIsOpen(false)} />}\r\n\r\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={() => setDrawerIsOpen(false)}>\r\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</SideDrawer>\r\n\r\n\t\t\t<MainHeader>\r\n\t\t\t\t{/* Hamburger button icon */}\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"main-navigation__menu-btn\"\r\n\t\t\t\t\tonClick={() => setDrawerIsOpen(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{/* Title  */}\r\n\t\t\t\t<h1 className=\"main-navigation__title\">\r\n\t\t\t\t\t<Link to=\"/\">Your Places</Link>\r\n\t\t\t\t</h1>\r\n\r\n\t\t\t\t{/* nav links  */}\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tSwitch,\n} from \"react-router-dom\";\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\n\nimport Footer from \"./shared/components/UIElements/Navigation/Footer/Footer\";\nimport MainNavigation from \"./shared/components/UIElements/Navigation/MainNavigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\n/*these routes are loaded using the lazy method, or code splitting\nCode-splitting your app can help you “lazy-load” just the things\nthat are currently needed by the user, which can dramatically improve \nthe performance of your app. While you haven’t reduced the overall amount \nof code in your app, you’ve avoided loading code that the user may never \nneed, and reduced the amount of code needed during the initial load.\nSo basically the imports below are not loaded on page load up, but\nwill be loaded when the user navigates there\nhttps://reactjs.org/docs/code-splitting.html\n//!{Suspense} is needed for routes to function in lazy mode\n*/\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n\tconst { login, logout, token, userId } = useAuth();\n\tlet routes;\n\n\tif (token) {\n\t\troutes = (\n\t\t\t// switch makes sure it doesnt move to the next route after a match is found\n\t\t\t<Switch>\n\t\t\t\t{/* exact makes sure the path is an exact match */}\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t{/* :userId is a dynamic route  */}\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/new\" exact>\n\t\t\t\t\t<NewPlace />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/:placeId\">\n\t\t\t\t\t<UpdatePlace />\n\t\t\t\t</Route>\n\t\t\t\t{/* if path doesnt exist or an unknown path is entered redirect is used */}\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t);\n\t} else {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/auth\">\n\t\t\t\t\t<Auth />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/auth\" />\n\t\t\t</Switch>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div style={{ position: \"relative\", minHeight: \"100vh\" }}>\n\t\t\t<div style={{ paddingBottom: \"100px\" }}>\n\t\t\t\t{/* wrap the entire application that need the authcontext variables using\n\t\t\t\tauthcontext.provider */}\n\t\t\t\t<AuthContext.Provider\n\t\t\t\t\t//bind the values we manage with auth context, to new values here\n\t\t\t\t\t//so that when a value changes all the component that listen to the context will rerender\n\t\t\t\t\tvalue={{ userId, isLoggedIn: !!token, token, login, logout }}\n\t\t\t\t>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<MainNavigation />\n\t\t\t\t\t\t{/* add suspense and a fallback alternative if loading lazy takes too long*/}\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{routes}\n\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</Router>\n\t\t\t\t</AuthContext.Provider>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}