{"version":3,"sources":["shared/components/UIElements/Map/Map.js","places/components/PlaceItem/PlaceItem.js","places/components/PlaceList/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card/Card.js","shared/components/UIElements/ErrorModal/ErrorModal.js"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","className","style","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","deletePlaceHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","_id","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","response","data","places","fetchPlaces","deletedPlaceId","console","log","prevPlaces","filter","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","children","ReactDOM","createPortal","document","getElementById","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","push","axios","signal","reqCtrl","statusText","Error","message","forEach","abortCtrl","abort"],"mappings":"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","file":"static/js/7.d85d5ade.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n\t//useRef is used to create a pointer /reference to a DOM node or\r\n\t//we can use it to create variables which survive rerender ccles of our component that dont lose their value\r\n\t//the former is what is set up here, we could have done this with a DOM selectore like getClassName\r\n\tconst mapRef = useRef();\r\n\r\n\tconst { center, zoom } = props;\r\n\r\n\t//use useEffect to register a function that changes based on center and zoom as dependencies\r\n\tuseEffect(() => {\r\n\t\t//* mapRef.current holds the pointer we need\r\n\t\t//and we tell google maps where it shld render the map\r\n\t\tconst map = new window.google.maps.Map(mapRef.current, {\r\n\t\t\tcenter: center,\r\n\t\t\tzoom: zoom,\r\n\t\t});\r\n\r\n\t\t//render a marker at the center of map, find more in google maps api documentation\r\n\t\tnew window.google.maps.Marker({ position: center, map: map });\r\n\t}, [center, zoom]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\t// we set up a connection btw this div and the mapRef const,\r\n\t\t\t//map ref is a pointer to the div\r\n\t\t\tref={mapRef}\r\n\t\t\tclassName={`map ${props.className}`}\r\n\t\t\tstyle={props.style}\r\n\t\t></div>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\nimport Button from \"../../../shared/components/FormElements/Button/Button\";\r\nimport Modal from \"../../../shared/components/UIElements/Modal/Modal\";\r\nimport Map from \"../../../shared/components/UIElements/Map/Map\";\r\nimport ErrorModal from \"../../../shared/components/UIElements/ErrorModal/ErrorModal\";\r\nimport LoadingSpinner from \"../../../shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\r\nimport { AuthContext } from \"../../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n\tconst auth = useContext(AuthContext);\r\n\r\n\tconst [showMap, setShowMap] = useState(false);\r\n\tconst [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\tconst deletePlaceHandler = async () => {\r\n\t\tsetShowConfirmModal(false);\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/api/places/${props.id}`,\r\n\t\t\t\t\"DELETE\",\r\n\t\t\t\tnull,\r\n\t\t\t\t{\r\n\t\t\t\t\tAuthorization: \"Bearer \" + auth.token,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tprops.onDelete(props.id);\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showMap}\r\n\t\t\t\tonCancel={() => setShowMap(false)}\r\n\t\t\t\theader={props.address}\r\n\t\t\t\tcontentClass=\"place-item__modal-content\"\r\n\t\t\t\tfooterClass=\"place-item__modal-actions\"\r\n\t\t\t\tfooter={<Button onClick={() => setShowMap(false)}>CLOSE</Button>}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"map-container\">\r\n\t\t\t\t\t<Map center={props.coordinates} zoom={15} />\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t{/* Modal for deletion confirmation */}\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showConfirmModal}\r\n\t\t\t\tonCancel={() => setShowConfirmModal(false)}\r\n\t\t\t\theader=\"Delete place\"\r\n\t\t\t\tfooterClass=\"place-item__modal-actions\"\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Button inverse onClick={() => setShowConfirmModal(false)}>\r\n\t\t\t\t\t\t\tCANCEL\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button danger onClick={deletePlaceHandler}>\r\n\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<p>Do you want to delete this place?</p>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<li className=\"place-item\">\r\n\t\t\t\t<Card className=\"place-item__content\">\r\n\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\r\n\t\t\t\t\t<div className=\"place-item__image\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`}\r\n\t\t\t\t\t\t\talt={props.title}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"place-item__info\">\r\n\t\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t\t<h4>{props.description}</h4>\r\n\t\t\t\t\t\t<h4>{props.address}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"place-item__actions\">\r\n\t\t\t\t\t\t<Button inverse onClick={() => setShowMap(true)}>\r\n\t\t\t\t\t\t\tVIEW ON MAP\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{auth.userId === props.creatorId && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Button to={`/places/${props.id}`}>EDIT</Button>\r\n\t\t\t\t\t\t\t\t<Button danger onClick={() => setShowConfirmModal(true)}>\r\n\t\t\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</li>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\nimport PlaceItem from \"../PlaceItem/PlaceItem\";\r\nimport Button from \"../../../shared/components/FormElements/Button/Button\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"place-list center\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<h2>No places found. Maybe create one</h2>\r\n\t\t\t\t\t<Button to=\"/places/new\">Share Place</Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"place-list\">\r\n\t\t\t{props.items.map((place) => (\r\n\t\t\t\t<PlaceItem\r\n\t\t\t\t\tkey={place._id}\r\n\t\t\t\t\tid={place._id}\r\n\t\t\t\t\timage={place.image}\r\n\t\t\t\t\ttitle={place.title}\r\n\t\t\t\t\tdescription={place.description}\r\n\t\t\t\t\taddress={place.address}\r\n\t\t\t\t\tcreatorId={place.creator}\r\n\t\t\t\t\tcoordinates={place.location}\r\n\t\t\t\t\tonDelete={props.onDeletePlace}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\r\nimport PlaceList from \"../components/PlaceList/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst [loadedPlaces, setLoadedPlaces] = useState();\r\n\t//useParams gives us access to the dynamic segments we set up in our route config\r\n\t//giving us access to the id encoded in the url\r\n\tconst userId = useParams().userId;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchPlaces = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/api/places/user/${userId}`\r\n\t\t\t\t);\r\n\t\t\t\tsetLoadedPlaces(response.data.places);\r\n\t\t\t} catch (err) {}\r\n\t\t};\r\n\t\tfetchPlaces();\r\n\t}, [sendRequest, userId]);\r\n\r\n\tconst placeDeletedHandler = (deletedPlaceId) => {\r\n\t\tconsole.log(deletedPlaceId);\r\n\t\tconsole.log(loadedPlaces);\r\n\t\tsetLoadedPlaces((prevPlaces) =>\r\n\t\t\tprevPlaces.filter((place) => place._id !== deletedPlaceId)\r\n\t\t);\r\n\t\tconsole.log(loadedPlaces);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading && loadedPlaces && (\r\n\t\t\t\t<PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n\tconst content = (\r\n\t\t<div className={`modal ${props.className}`} style={props.style}>\r\n\t\t\t<header className={`modal__header ${props.headerClass}`}>\r\n\t\t\t\t{/* form title */}\r\n\t\t\t\t<h2>{props.header}</h2>\r\n\t\t\t</header>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={\r\n\t\t\t\t\tprops.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className={`modal__content ${props.contentClass}`}>\r\n\t\t\t\t\t{/* will  hold form body */}\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className={`modal__footer ${props.footerClass}`}>\r\n\t\t\t\t\t{/* will hold form action buttons */}\r\n\t\t\t\t\t{props.footer}\r\n\t\t\t\t</footer>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\treturn ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n\treturn (\r\n\t\t// using the backdrop component to exit the modal\r\n\t\t<React.Fragment>\r\n\t\t\t{props.show && <Backdrop onClick={props.onCancel} />}\r\n\t\t\t<CSSTransition\r\n\t\t\t\tin={props.show}\r\n\t\t\t\tmountOnEnter\r\n\t\t\t\tunmountOnExit\r\n\t\t\t\ttimeout={200}\r\n\t\t\t\tclassNames=\"modal\"\r\n\t\t\t>\r\n\t\t\t\t{/* forward all the props we get from outside to modalOverlay, which is the internal component we dont export, using the spread operator\r\n\t\t\tspreading the header, children, footer props*/}\r\n\t\t\t\t<ModalOverlay {...props} />\r\n\t\t\t</CSSTransition>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useHttpClient = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\tconst activeHttpRequests = useRef([]);\r\n\r\n\tconst sendRequest = useCallback(\r\n\t\tasync (url, method = \"GET\", body = null, headers = {}) => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst httpAbortCtrl = new AbortController();\r\n\t\t\tactiveHttpRequests.current.push(httpAbortCtrl);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios({\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tmethod,\r\n\t\t\t\t\tdata: body,\r\n\t\t\t\t\theaders,\r\n\t\t\t\t\tsignal: httpAbortCtrl.signal,\r\n\t\t\t\t});\r\n\t\t\t\tactiveHttpRequests.current = activeHttpRequests.current.filter(\r\n\t\t\t\t\t(reqCtrl) => reqCtrl !== httpAbortCtrl\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(response.statusText);\r\n\t\t\t\tif (!response.statusText) {\r\n\t\t\t\t\tthrow new Error(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetError(err.response.data.message);\r\n\t\t\t\tconsole.log(err.response.data.message);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tthrow new Error(err.response.data.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = () => {\r\n\t\tsetError(null);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tactiveHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div className={`card ${props.className}`} style={props.style}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"../../FormElements/Button/Button\";\r\nimport \"./ErrorModal.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tclassName=\"errorCenter\"\r\n\t\t\tonCancel={props.onClear}\r\n\t\t\theader=\"An Error Occurred!\"\r\n\t\t\tshow={!!props.error}\r\n\t\t\tfooter={<Button onClick={props.onClear}>Okay</Button>}\r\n\t\t>\r\n\t\t\t<p>{props.error}</p>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ErrorModal;\r\n"],"sourceRoot":""}