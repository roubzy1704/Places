{"version":3,"sources":["shared/components/UIElements/Avatar/Avatar.js","user/components/userItem/UserItem.js","user/components/userList/UserList.js","user/pages/Users.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card/Card.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","UserItem","Card","to","id","process","name","placeCount","UserList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","response","data","users","fetchUsers","Fragment","onClear","LoadingSpinner","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","children","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","show","onClick","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useRef","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","axios","signal","filter","reqCtrl","console","log","statusText","Error","message","forEach","abortCtrl","abort"],"mappings":"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","file":"static/js/8.59f30c93.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n\treturn (\r\n\t\t<div className={`avatar ${props.className}`} style={props.style}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={props.image}\r\n\t\t\t\talt={props.alt}\r\n\t\t\t\tstyle={{ width: props.width, height: props.width }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../../shared/components/UIElements/Avatar/Avatar\";\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n\treturn (\r\n\t\t<li className=\"user-item\">\r\n\t\t\t<Card className=\"user-item__content\">\r\n\t\t\t\t<Link to={`/${props.id}/places`}>\r\n\t\t\t\t\t<div className=\"user-item__image\">\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\timage={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`}\r\n\t\t\t\t\t\t\talt={props.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-item__info\">\r\n\t\t\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t{props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"../userItem/UserItem\";\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<h2>No users found</h2>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<ul className=\"users-list\">\r\n\t\t\t{props.items.map((user) => (\r\n\t\t\t\t<UserItem\r\n\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\tid={user.id}\r\n\t\t\t\t\timage={user.image}\r\n\t\t\t\t\tname={user.name}\r\n\t\t\t\t\tplaceCount={user.places.length}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/Modal/Modal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\r\nimport UsersList from \"../components/userList/UserList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst [loadedUsers, setLoadedUsers] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchUsers() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/api/users/`\r\n\t\t\t\t);\r\n\t\t\t\tsetLoadedUsers(response.data.users);\r\n\t\t\t} catch (err) {}\r\n\t\t}\r\n\t\tfetchUsers();\r\n\t}, [sendRequest]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n\tconst content = (\r\n\t\t<div className={`modal ${props.className}`} style={props.style}>\r\n\t\t\t<header className={`modal__header ${props.headerClass}`}>\r\n\t\t\t\t{/* form title */}\r\n\t\t\t\t<h2>{props.header}</h2>\r\n\t\t\t</header>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={\r\n\t\t\t\t\tprops.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className={`modal__content ${props.contentClass}`}>\r\n\t\t\t\t\t{/* will  hold form body */}\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className={`modal__footer ${props.footerClass}`}>\r\n\t\t\t\t\t{/* will hold form action buttons */}\r\n\t\t\t\t\t{props.footer}\r\n\t\t\t\t</footer>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\treturn ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n\treturn (\r\n\t\t// using the backdrop component to exit the modal\r\n\t\t<React.Fragment>\r\n\t\t\t{props.show && <Backdrop onClick={props.onCancel} />}\r\n\t\t\t<CSSTransition\r\n\t\t\t\tin={props.show}\r\n\t\t\t\tmountOnEnter\r\n\t\t\t\tunmountOnExit\r\n\t\t\t\ttimeout={200}\r\n\t\t\t\tclassNames=\"modal\"\r\n\t\t\t>\r\n\t\t\t\t{/* forward all the props we get from outside to modalOverlay, which is the internal component we dont export, using the spread operator\r\n\t\t\tspreading the header, children, footer props*/}\r\n\t\t\t\t<ModalOverlay {...props} />\r\n\t\t\t</CSSTransition>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useHttpClient = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\tconst activeHttpRequests = useRef([]);\r\n\r\n\tconst sendRequest = useCallback(\r\n\t\tasync (url, method = \"GET\", body = null, headers = {}) => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst httpAbortCtrl = new AbortController();\r\n\t\t\tactiveHttpRequests.current.push(httpAbortCtrl);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios({\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tmethod,\r\n\t\t\t\t\tdata: body,\r\n\t\t\t\t\theaders,\r\n\t\t\t\t\tsignal: httpAbortCtrl.signal,\r\n\t\t\t\t});\r\n\t\t\t\tactiveHttpRequests.current = activeHttpRequests.current.filter(\r\n\t\t\t\t\t(reqCtrl) => reqCtrl !== httpAbortCtrl\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(response.statusText);\r\n\t\t\t\tif (!response.statusText) {\r\n\t\t\t\t\tthrow new Error(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetError(err.response.data.message);\r\n\t\t\t\tconsole.log(err.response.data.message);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tthrow new Error(err.response.data.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = () => {\r\n\t\tsetError(null);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tactiveHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div className={`card ${props.className}`} style={props.style}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}